name: Build and Deploy Logic Gates Simulator

on:
   push:
      branches: [master]
   pull_request:
      branches: [master]

jobs:
   build-and-release-jar:
      runs-on: ubuntu-latest

      steps:
         - uses: actions/checkout@v3

         - name: Set up JDK 16 with JavaFX
           uses: actions/setup-java@v3
           with:
              java-version: "16"
              distribution: "temurin"

         - name: Download and Setup JavaFX SDK
           run: |
              wget https://download2.gluonhq.com/openjfx/16/openjfx-16_linux-x64_bin-sdk.zip
              unzip openjfx-16_linux-x64_bin-sdk.zip -d javafx-sdk
              echo "JavaFX SDK setup complete."
              echo "PRISM_ORDER=sw" >> $GITHUB_ENV
              echo "JAVA_TOOL_OPTIONS=-Dprism.order=sw" >> $GITHUB_ENV
              
         - name: Setup Xvfb
           run: |
              sudo apt-get update
              sudo apt-get install -y xvfb
              Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
              echo "DISPLAY=:99" >> $GITHUB_ENV
              export DISPLAY=:99

         - name: Set Java and JavaFX Properties
           run: |
              echo "JAVA_OPTS=-Dprism.order=sw" >> $GITHUB_ENV
              echo "DISPLAY=:99" >> $GITHUB_ENV

         - name: Install jpackage requirements
           run: sudo apt-get install fakeroot rpm

         - name: Maven Clean and Package
           run: |
              DISPLAY=:99 mvn clean package -Djava.awt.headless=true -Dprism.order=sw

         - name: Disable Accessibility Tools
           run: |
             export NO_AT_BRIDGE=1
             echo "NO_AT_BRIDGE=1" >> $GITHUB_ENV

         - name: Rename Shaded JAR
           run: |
              if [ -f ./target/logic_gates-1.0-SNAPSHOT-shaded.jar ]; then
                mv ./target/logic_gates-1.0-SNAPSHOT-shaded.jar ./target/logic_gates-1.0-SNAPSHOT.jar
              fi
        
         - name: JavaFX Diagnostics
           run: |
              java -Dprism.verbose=true -Dprism.order=sw -jar ./target/logic_gates-1.0-SNAPSHOT.jar

         - name: Create Native Package with jpackage
           run: |
              jpackage --type app-image --input ./target/ \
                       --name LogicGates \
                       --main-jar logic_gates-1.0-SNAPSHOT.jar \
                       --main-class com.paperturtle.Main \
                       --dest ./package \
                       --module-path $JAVA_HOME/jmods:./javafx-sdk/lib \
                       --add-modules javafx.controls,javafx.fxml,javafx.graphics \
                       --verbose

         - name: Get Release by Tag
           id: get_release
           uses: octokit/request-action@v2.x
           with:
              route: GET /repos/${{ github.repository }}/releases/tags/${{ github.ref_name }}
           env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
           continue-on-error: true

         - name: Delete Release if Exists
           if: steps.get_release.outputs.status == 200
           uses: octokit/request-action@v2.x
           with:
              route: DELETE /repos/${{ github.repository }}/releases/${{ fromJson(steps.get_release.outputs.data).id }}
           env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

         - name: Create Release
           id: create_release
           uses: actions/create-release@v1
           env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
           with:
              tag_name: ${{ github.ref_name }}
              release_name: Release ${{ github.ref_name }} - ${{ github.sha }}
              draft: false
              prerelease: false

         - name: List output files
           run: ls -lah ./target/ ./package/

         - name: Zip Package
           run: zip -r package.zip ./package/LogicGates

         - name: Upload Release Asset
           id: upload-release-asset
           uses: actions/upload-release-asset@v1
           env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
           with:
              upload_url: ${{ steps.create_release.outputs.upload_url }}
              asset_path: ./package.zip
              asset_name: LogicGates.zip
              asset_content_type: application/zip
